<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deploy on Documenting the journey ^_^</title>
    <link>http://localhost:1313/tags/deploy/</link>
    <description>Recent content in Deploy on Documenting the journey ^_^</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 03 Jun 2025 20:50:04 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/deploy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>docker容器部署简单php和nginx相关目录</title>
      <link>http://localhost:1313/blog/docker%E5%AE%B9%E5%99%A8%E9%83%A8%E7%BD%B2%E7%AE%80%E5%8D%95php%E5%92%8Cnginx%E7%9B%B8%E5%85%B3%E7%9B%AE%E5%BD%95/</link>
      <pubDate>Tue, 03 Jun 2025 20:50:04 +0800</pubDate>
      <guid>http://localhost:1313/blog/docker%E5%AE%B9%E5%99%A8%E9%83%A8%E7%BD%B2%E7%AE%80%E5%8D%95php%E5%92%8Cnginx%E7%9B%B8%E5%85%B3%E7%9B%AE%E5%BD%95/</guid>
      <description>&lt;h2 id=&#34;docker容器部署简单php和nginx相关目录&#34;&gt;docker容器部署简单php和nginx相关目录&lt;a href=&#34;#docker%e5%ae%b9%e5%99%a8%e9%83%a8%e7%bd%b2%e7%ae%80%e5%8d%95php%e5%92%8cnginx%e7%9b%b8%e5%85%b3%e7%9b%ae%e5%bd%95&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;在 Docker 容器中，目录结构的设计通常取决于基础镜像以及应用程序的需求。不过，有一些常见的目录和文件是许多容器都会用到的。以下是这些常见目录及其功能的概述：&lt;/p&gt;&#xA;&lt;h3 id=&#34;常见目录结构&#34;&gt;常见目录结构&lt;a href=&#34;#%e5%b8%b8%e8%a7%81%e7%9b%ae%e5%bd%95%e7%bb%93%e6%9e%84&#34; class=&#34;post-heading__anchor&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;/var/www/html&lt;/code&gt; 或 &lt;code&gt;/usr/share/nginx/html&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: 用于存放 Web 应用程序的静态资源（如 HTML 文件、CSS、JavaScript 和图片等）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;: 在基于 Nginx 的容器中，静态网站内容通常放在 &lt;code&gt;/usr/share/nginx/html&lt;/code&gt; 下；而对于 PHP 应用，可能会映射到 &lt;code&gt;/var/www/html&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;/etc/nginx&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;用途&lt;/strong&gt;: 存储 Nginx 的配置文件。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;子目录与文件：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;nginx.conf&lt;/code&gt;: 主配置文件，定义了 Nginx 的全局设置。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;conf.d/&lt;/code&gt;: 包含额外的配置文件，通常是针对不同站点或服务的配置片段。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;sites-available/&lt;/code&gt; 和 &lt;code&gt;sites-enabled/&lt;/code&gt;: 类似于 Apache 的配置管理方式，前者存储所有可用的站点配置，后者通过符号链接指向启用的站点配置。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;/etc/php&lt;/code&gt; 或 &lt;code&gt;/usr/local/etc/php&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;用途&lt;/strong&gt;: 存储 PHP 的配置文件。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;子目录与文件：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;php.ini&lt;/code&gt;: PHP 的主要配置文件，控制 PHP 的运行时行为。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;conf.d/&lt;/code&gt;: 包含其他 PHP 扩展的配置文件。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;/var/log/nginx&lt;/code&gt; 或 &lt;code&gt;/var/log/php-fpm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;用途&lt;/strong&gt;: 存储日志文件。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;示例：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;access.log&lt;/code&gt;: 记录所有的访问请求。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;error.log&lt;/code&gt;: 记录错误信息。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;/usr/src&lt;/code&gt; 或 &lt;code&gt;/opt&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
